import React,{useEffect,useLayoutEffect,useMemo,useState} from 'react'; import { View,TouchableOpacity,Text,Alert } from 'react-native'; import { GiftedChat } from 'react-native-gifted-chat'; import { useAuth } from '../App'; import { getMessages, sendMessage } from '../src/api'; import { connectSocket } from '../src/realtime';
export default function GroupScreen({route,navigation}){ const { groupId, groupName }=route.params; const { token }=useAuth(); const [messages,setMessages]=useState([]);
useLayoutEffect(()=>{ navigation.setOptions({ headerRight:()=> (<TouchableOpacity onPress={()=>navigation.navigate('Invite',{groupId,groupName})}><Text style={{color:'#07a',fontWeight:'700'}}>Invite</Text></TouchableOpacity>) }); },[navigation,groupId,groupName]);
useEffect(()=>{ let mounted=true; (async()=>{ try{ const r=await getMessages(token,groupId,30); if(!mounted) return; const msgs=(r.items||[]).map(m=>({_id:m.id,text:m.text,createdAt:new Date(m.createdAt),user:{_id:m.userId}})); setMessages(msgs); }catch(e){ Alert.alert('Error',e.message||'Failed to load messages'); } })(); return ()=>{mounted=false}; },[token,groupId]);
const socket=useMemo(()=>connectSocket(token),[token]); useEffect(()=>{ socket.emit('room:join',groupId); socket.on('message:new',({message})=>{ setMessages(prev=>GiftedChat.append(prev,[{_id:message.id,text:message.text,createdAt:new Date(message.createdAt),user:{_id:message.userId}}])); }); return ()=>{ socket.off('message:new'); socket.disconnect(); }; },[socket,groupId]);
const onSend=async (newMessages=[])=>{ const m=newMessages[0]; try{ socket.emit('message:send',{ groupId, text:m.text }); await sendMessage(token,groupId,m.text); }catch(e){ Alert.alert('Error',e.message||'Send failed'); } };
return (<View style={{flex:1}}><GiftedChat messages={messages} onSend={onSend} user={{_id:'me'}}/></View>); }